@page "/ManagerDashboard"
@model FPP.Presentation.Pages.ManagerDashboardModel
@{
}
<h1>Manager Dashboard</h1>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
<script>
    // Khởi tạo SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .withAutomaticReconnect()
        .build();

    // Lắng nghe sự kiện ReceiveNotification
    connection.on("ReceiveNotification", function (notification) {
        console.log("Received notification:", notification);

        // Hiển thị toast notification
        showToastNotification(notification);

        // Có thể update notification badge
        updateNotificationBadge();

        // Có thể play sound
        playNotificationSound();
    });

    // Bắt đầu kết nối
    connection.start()
        .then(function () {
            console.log("SignalR Connected!");
        })
        .catch(function (err) {
            console.error("SignalR Connection Error: ", err);
            // Retry connection after 5 seconds
            setTimeout(() => connection.start(), 5000);
        });

    // Function hiển thị toast notification
    function showToastNotification(notification) {
        // Sử dụng thư viện toast như toastr hoặc tự làm
        const toast = document.createElement('div');
        toast.className = 'notification-toast';
        toast.innerHTML = `
            <div class="toast-header">
                <i class="fas fa-bell"></i>
                <strong>${notification.Title}</strong>
                <span class="toast-time">${new Date(notification.Timestamp).toLocaleTimeString()}</span>
            </div>
            <div class="toast-body">
                <p>${notification.Message}</p>
                <small>
                    ${notification.BookingDetails.Lab} - ${notification.BookingDetails.Zone}<br>
                    ${notification.BookingDetails.Date} | ${notification.BookingDetails.Time}
                </small>
            </div>
        `;

        document.body.appendChild(toast);

        // Auto remove after 5 seconds
        setTimeout(() => {
            toast.style.animation = 'slideOut 0.5s ease-out';
            setTimeout(() => toast.remove(), 500);
        }, 5000);
    }

    function updateNotificationBadge() {
        const badge = document.querySelector('.notification-badge');
        if (badge) {
            const count = parseInt(badge.textContent || '0');
            badge.textContent = count + 1;
            badge.style.display = 'block';
        }
    }

    function playNotificationSound() {
        const audio = new Audio('/sounds/notification.mp3');
        audio.play().catch(e => console.log('Could not play sound:', e));
    }
</script>

<style>
    .notification-toast {
        position: fixed;
        top: 100px;
        right: 20px;
        min-width: 350px;
        background: rgba(10, 10, 10, 0.95);
        border: 1px solid rgba(255, 107, 53, 0.5);
        border-radius: 12px;
        padding: 15px;
        z-index: 10000;
        animation: slideIn 0.5s ease-out;
        box-shadow: 0 10px 40px rgba(255, 107, 53, 0.3);
    }

    .toast-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
        color: #ff6b35;
        font-weight: 600;
    }

        .toast-header i {
            font-size: 1.2rem;
        }

    .toast-time {
        margin-left: auto;
        font-size: 0.85rem;
        color: #999;
    }

    .toast-body {
        color: white;
    }

        .toast-body p {
            margin: 0 0 8px 0;
        }

        .toast-body small {
            color: #999;
            line-height: 1.4;
        }

    @@keyframes slideIn {
        from

    {
        transform: translateX(400px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }

    @@keyframes slideOut {
        from

    {
        transform: translateX(0);
        opacity: 1;
    }

    to {
        transform: translateX(400px);
        opacity: 0;
    }

    }

    .notification-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ff6b35;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 700;
    }
</style>